// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  EXPIRED
  PAYMENT_RECEIVED
  PAYMENT_SENT
  FAILED
}

enum Currency {
  NGN
  BTC
  USD
}

enum PaymentMethod {
  BTC
  LIGHTNING
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
}

enum TransactionStatus {
  SUCCESS
  FAILED
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  kycInfo      KYCInfo?
  account      Account?
  verification Verification?
  verified     Boolean       @default(false)
}

model Account {
  id            Int     @id @default(autoincrement())
  user          User    @relation(fields: [userId], references: [id])
  userId        Int     @unique
  bankCode      String
  accountNumber String  @unique
  accountName   String
  lnAddress     String? @unique
  order         Order[]
}

model KYCInfo {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
  bvn    String
}

model Order {
  id            Int           @id @default(autoincrement())
  account       Account       @relation(fields: [accountId], references: [id])
  accountId     Int
  orderId       String        @unique
  quoteId       String
  paymentMethod PaymentMethod
  amount        BigInt
  targetAmount  String
  createdAt     DateTime
  status        OrderStatus   @default(PENDING)
  isValid       Boolean
  invoice       String
  expiryTime    DateTime
  transaction   Transaction[]
  partner       Partner?      @relation(fields: [partnerId], references: [id])
  partnerId     Int?
  callback      String?
}

model Transaction {
  id        Int               @id @default(autoincrement())
  txId      String            @unique
  txHash    String            @unique
  order     Order             @relation(fields: [orderId], references: [orderId])
  orderId   String
  ref       String
  amount    BigInt
  type      TransactionType
  status    TransactionStatus
  createdAt DateTime
  updatedAt DateTime
}

model Partner {
  id     Int     @id @default(autoincrement())
  name   String   @unique
  domain String
  token  String
  Order  Order[]
}
